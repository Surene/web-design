 flex container 弹性盒子模型
作用：
在父内容里面垂直居中一个块内容。
使容器的所有子项占用等量的可用宽度/高度，而不管有多少宽度/高度可用。
使多列布局中的所有列采用相同的高度，即使它们包含的内容量不同。

可以使多列（行）具有相同的列（行），并且宽度（长度）相同
只需简单的声明： display：flex; flex-decoration属性可以修改行排列还算列排列

flex-decoration: column/row/column-reverse/row-reverse 是各部分的排列方式
 column是列排序，即一个元素占一整行
 
换行： flex-wrap: wrap; flex: xxxpx; 分别规定换行和每个元素宽度或高度最小值 
flex-decoration和flex-wrap 两者可以缩写为 flex-flow: a b; ab两个值分别是排列方式和换行，可以只有
排列方式的值
display: flex 和 flex-flow在父对象中 flex：xxxpx; 在子对象中

动态尺寸：即先给所有对象一个相同的基本比例，一般为1，也可以是其他，然后给某个对象一个不同的flex值
即其他对象的倍数，这样就可以形成任意比例的布局
注意：article:nth-of-type(n)中冒号前面或后面都不能有空格，否则会失效

flex-shrink: 一般用于溢出盒子的对象取出多少溢出量，以防止溢出盒子
flex-shrink 属性指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时
候才会发生收缩，其收缩的大小是依据 flex-shrink 的值 取值只能是正数

元素水平和垂直对齐：
垂直对齐：align-item: center; 沿着交叉轴
水平对齐（主轴方向）：justify-content: 
默认值是 flex-start，这会使所有 flex 项都位于主轴的开始处。
你也可以用 flex-end 来让 flex 项到结尾处。
center 在 justify-content 里也是可用的，可以让 flex 项在主轴居中。
而我们上面用到的值 space-around 是很有用的——它会使所有 flex 项沿着主轴均匀地分布，在任意一端都会留有一点空间。
还有一个值是 space-between，它和 space-around 非常相似，只是它不会在两端留下任何空间。

flex排序：
order: 0; 默认值为0，值越大越靠后，可以设置负值，用来改变显示位置，但是dom树顺序不变！
flex嵌套： 可以把flex的子项当成父对象，就像div嵌套一样
